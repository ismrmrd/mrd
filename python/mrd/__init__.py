# This file was generated by the "yardl" tool. DO NOT EDIT.

# pyright: reportUnusedImport=false
from typing import Tuple as _Tuple
import re as _re
import numpy as _np

_MIN_NUMPY_VERSION = (1, 22, 0)

def _parse_version(version: str) -> _Tuple[int, ...]:
    try:
        return tuple(map(int, version.split(".")))
    except ValueError:
        # ignore any prerelease suffix
        version = _re.sub(r"[^0-9.]", "", version)
        return tuple(map(int, version.split(".")))

if _parse_version(_np.__version__) < _MIN_NUMPY_VERSION:
    raise ImportError(f"Your installed numpy version is {_np.__version__}, but version >= {'.'.join(str(i) for i in _MIN_NUMPY_VERSION)} is required.")

from .yardl_types import *
from .types import (
    AccelerationFactorType,
    Acquisition,
    AcquisitionBucket,
    AcquisitionData,
    AcquisitionFlags,
    AcquisitionHeader,
    AcquisitionSystemInformationType,
    AnyImage,
    Array,
    ArrayComplexFloat,
    Calibration,
    CalibrationMode,
    CoilLabelType,
    DiffusionDimension,
    DiffusionType,
    EncodingCounters,
    EncodingLimitsType,
    EncodingSpaceType,
    EncodingType,
    ExperimentalConditionsType,
    FieldOfViewMm,
    GradientDirectionType,
    Header,
    Image,
    ImageArray,
    ImageComplexDouble,
    ImageComplexFloat,
    ImageData,
    ImageDouble,
    ImageFlags,
    ImageFloat,
    ImageHeader,
    ImageInt16,
    ImageInt32,
    ImageMeta,
    ImageMetaValue,
    ImageType,
    ImageUint16,
    ImageUint32,
    InterleavingDimension,
    LimitType,
    MatrixSizeType,
    MeasurementDependencyType,
    MeasurementInformationType,
    MultibandSpacingType,
    MultibandType,
    NoiseCovariance,
    ParallelImagingType,
    PatientGender,
    PatientPosition,
    ReconAssembly,
    ReconBuffer,
    ReconData,
    ReferencedImageSequenceType,
    SamplingDescription,
    SamplingLimits,
    SequenceParametersType,
    StreamItem,
    StudyInformationType,
    SubjectInformationType,
    ThreeDimensionalFloat,
    Trajectory,
    TrajectoryData,
    TrajectoryDescriptionType,
    UserParameterBase64Type,
    UserParameterDoubleType,
    UserParameterLongType,
    UserParameterStringType,
    UserParametersType,
    Waveform,
    WaveformInformationType,
    WaveformSamples,
    WaveformType,
    WaveformUint32,
    get_dtype,
)
from .protocols import (
    MrdNoiseCovarianceReaderBase,
    MrdNoiseCovarianceWriterBase,
    MrdReaderBase,
    MrdWriterBase,
)
from .binary import (
    BinaryMrdNoiseCovarianceReader,
    BinaryMrdNoiseCovarianceWriter,
    BinaryMrdReader,
    BinaryMrdWriter,
)
from .ndjson import (
    NDJsonMrdNoiseCovarianceReader,
    NDJsonMrdNoiseCovarianceWriter,
    NDJsonMrdReader,
    NDJsonMrdWriter,
)
