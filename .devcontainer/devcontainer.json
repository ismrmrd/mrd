// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containerdevcotns/tree/v0.238.0/containers/go
{
  "name": "mrd",
  "build": {
    "dockerfile": "Dockerfile",
    "context": ".."
  },
  "runArgs": ["--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],
  "overrideCommand": false,
  "mounts": [
    // Bind mount docker socket under an alias to support docker-from-docker
    "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
    "source=${localEnv:MATLAB_LICENSE_FILE:/dev/null},target=/tmp/matlab.host.lic,type=bind,readonly"
  ],
  "onCreateCommand": ".devcontainer/devcontainer-on-create.sh",
  "remoteUser": "vscode",

  "features": {
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {}
  },

  "containerEnv": {
    "PYTHONPATH": "/workspaces/mrd/python",
    "MATLAB_LICENSE_FILE": "/opt/matlab/latest/licenses/license.lic"
  },

  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "files.trimFinalNewlines": true,
        "files.trimTrailingWhitespace": true,
        "files.insertFinalNewline": true,
        "go.toolsManagement.checkForUpdates": "local",
        "go.useLanguageServer": true,
        "gopls": { "ui.semanticTokens": true },

        "[cpp]": {
          "editor.formatOnSave": true
        },

        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },

        "[jsonc]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },

        "cmake.sourceDirectory": "${workspaceFolder}/cpp",
        "cmake.buildDirectory": "${workspaceFolder}/cpp/build",

        // Python linting.
        "python.analysis.typeCheckingMode": "basic",
        "python.linting.ignorePatterns": ["**/conftest.py", "**/test_*.py"],
        "python.defaultInterpreterPath": "/opt/conda/envs/mrd/bin/python",
        "python.formatting.autopep8Path": "/opt/conda/envs/mrd/bin/autopep8",
        "python.terminal.activateEnvironment": false, // Disable the extension calling activate when the integrated terminal launches. We take care of this in ~/.bashrc.

        "testMate.cpp.test.executables": "cpp/{build,Build,BUILD,out,Out,OUT}/**/*{test,Test,TEST}*",

        // enable pretty printing when debugging C++ tests
        "testMate.cpp.debug.configTemplate": {
          "type": "cppvsdbg",
          "linux": { "type": "cppdbg", "MIMode": "gdb" },
          "darwin": { "type": "cppdbg", "MIMode": "lldb" },
          "win32": { "type": "cppvsdbg" },
          "program": "${exec}",
          "args": "${argsArray}",
          "cwd": "${cwd}",
          "env": "${envObj}",
          "environment": "${envObjArray}",
          "sourceFileMap": "${sourceFileMapObj}",
          "setupCommands": [
            {
              "description": "Enable pretty-printing for gdb",
              "text": "-enable-pretty-printing",
              "ignoreFailures": true
            }
          ]
        },

        "gcovViewer.gcovBinary": "/opt/conda/envs/mrd/bin/x86_64-conda-linux-gnu-gcov",
        "gcovViewer.buildDirectories": ["${workspaceFolder}/cpp/build"],
        "search.useIgnoreFiles": false,
        "search.exclude": {
          "**/cpp/build": true
        }
      },

      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "cschlosser.doxdocgen",
        "eamodio.gitlens",
        "esbenp.prettier-vscode",
        "GitHub.copilot",
        "JacquesLucke.gcov-viewer",
        "jinliming2.vscode-go-template",
        "matepek.vscode-catch2-test-adapter",
        "mathworks.language-matlab",
        "mhutchie.git-graph",
        "ms-python.python",
        "ms-toolsai.jupyter",
        "ms-vscode.cmake-tools",
        "ms-vscode.cpptools",
        "sclu1034.justfile",
        "timonwong.shellcheck",
        "twxs.cmake"
      ]
    }
  }
}
