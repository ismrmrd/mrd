// This file was generated by the "yardl" tool. DO NOT EDIT.

#pragma once
#include <array>
#include <complex>
#include <optional>
#include <variant>
#include <vector>

#include "../protocols.h"
#include "../yardl/detail/hdf5/io.h"

namespace mrd::hdf5 {
// HDF5 writer for the KspaceProtocol protocol.
class KspaceProtocolWriter : public mrd::KspaceProtocolWriterBase, public yardl::hdf5::Hdf5Writer {
  public:
  KspaceProtocolWriter(std::string path);

  protected:
  void WriteHeaderImpl(std::optional<mrd::Header> const& value) override;

  void WriteKspaceImpl(mrd::Kspace const& value) override;

  void WriteKspaceImpl(std::vector<mrd::Kspace> const& values) override;

  void EndKspaceImpl() override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetWriter> kspace_dataset_state_;
};

// HDF5 reader for the KspaceProtocol protocol.
class KspaceProtocolReader : public mrd::KspaceProtocolReaderBase, public yardl::hdf5::Hdf5Reader {
  public:
  KspaceProtocolReader(std::string path);

  void ReadHeaderImpl(std::optional<mrd::Header>& value) override;

  bool ReadKspaceImpl(mrd::Kspace& value) override;

  bool ReadKspaceImpl(std::vector<mrd::Kspace>& values) override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetReader> kspace_dataset_state_;
};

// HDF5 writer for the Mrd protocol.
class MrdWriter : public mrd::MrdWriterBase, public yardl::hdf5::Hdf5Writer {
  public:
  MrdWriter(std::string path);

  protected:
  void WriteHeaderImpl(std::optional<mrd::Header> const& value) override;

  void WriteDataImpl(mrd::StreamItem const& value) override;

  void EndDataImpl() override;

  public:
  void Flush() override;

  private:
  std::unique_ptr<yardl::hdf5::UnionDatasetWriter<13>> data_dataset_state_;
};

// HDF5 reader for the Mrd protocol.
class MrdReader : public mrd::MrdReaderBase, public yardl::hdf5::Hdf5Reader {
  public:
  MrdReader(std::string path);

  void ReadHeaderImpl(std::optional<mrd::Header>& value) override;

  bool ReadDataImpl(mrd::StreamItem& value) override;

  private:
  std::unique_ptr<yardl::hdf5::UnionDatasetReader<13>> data_dataset_state_;
};

// HDF5 writer for the MrdNoiseCovariance protocol.
class MrdNoiseCovarianceWriter : public mrd::MrdNoiseCovarianceWriterBase, public yardl::hdf5::Hdf5Writer {
  public:
  MrdNoiseCovarianceWriter(std::string path);

  protected:
  void WriteNoiseCovarianceImpl(mrd::NoiseCovariance const& value) override;

  private:
};

// HDF5 reader for the MrdNoiseCovariance protocol.
class MrdNoiseCovarianceReader : public mrd::MrdNoiseCovarianceReaderBase, public yardl::hdf5::Hdf5Reader {
  public:
  MrdNoiseCovarianceReader(std::string path);

  void ReadNoiseCovarianceImpl(mrd::NoiseCovariance& value) override;

  private:
};

} // namespace mrd

