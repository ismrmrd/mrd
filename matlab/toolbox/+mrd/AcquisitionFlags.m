% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef AcquisitionFlags < uint64
  methods (Static)
    function v = FIRST_IN_ENCODE_STEP_1
      v = mrd.AcquisitionFlags(1);
    end
    function v = LAST_IN_ENCODE_STEP_1
      v = mrd.AcquisitionFlags(2);
    end
    function v = FIRST_IN_ENCODE_STEP_2
      v = mrd.AcquisitionFlags(4);
    end
    function v = LAST_IN_ENCODE_STEP_2
      v = mrd.AcquisitionFlags(8);
    end
    function v = FIRST_IN_AVERAGE
      v = mrd.AcquisitionFlags(16);
    end
    function v = LAST_IN_AVERAGE
      v = mrd.AcquisitionFlags(32);
    end
    function v = FIRST_IN_SLICE
      v = mrd.AcquisitionFlags(64);
    end
    function v = LAST_IN_SLICE
      v = mrd.AcquisitionFlags(128);
    end
    function v = FIRST_IN_CONTRAST
      v = mrd.AcquisitionFlags(256);
    end
    function v = LAST_IN_CONTRAST
      v = mrd.AcquisitionFlags(512);
    end
    function v = FIRST_IN_PHASE
      v = mrd.AcquisitionFlags(1024);
    end
    function v = LAST_IN_PHASE
      v = mrd.AcquisitionFlags(2048);
    end
    function v = FIRST_IN_REPETITION
      v = mrd.AcquisitionFlags(4096);
    end
    function v = LAST_IN_REPETITION
      v = mrd.AcquisitionFlags(8192);
    end
    function v = FIRST_IN_SET
      v = mrd.AcquisitionFlags(16384);
    end
    function v = LAST_IN_SET
      v = mrd.AcquisitionFlags(32768);
    end
    function v = FIRST_IN_SEGMENT
      v = mrd.AcquisitionFlags(65536);
    end
    function v = LAST_IN_SEGMENT
      v = mrd.AcquisitionFlags(131072);
    end
    function v = IS_NOISE_MEASUREMENT
      v = mrd.AcquisitionFlags(262144);
    end
    function v = IS_PARALLEL_CALIBRATION
      v = mrd.AcquisitionFlags(524288);
    end
    function v = IS_PARALLEL_CALIBRATION_AND_IMAGING
      v = mrd.AcquisitionFlags(1048576);
    end
    function v = IS_REVERSE
      v = mrd.AcquisitionFlags(2097152);
    end
    function v = IS_NAVIGATION_DATA
      v = mrd.AcquisitionFlags(4194304);
    end
    function v = IS_PHASECORR_DATA
      v = mrd.AcquisitionFlags(8388608);
    end
    function v = LAST_IN_MEASUREMENT
      v = mrd.AcquisitionFlags(16777216);
    end
    function v = IS_HPFEEDBACK_DATA
      v = mrd.AcquisitionFlags(33554432);
    end
    function v = IS_DUMMYSCAN_DATA
      v = mrd.AcquisitionFlags(67108864);
    end
    function v = IS_RTFEEDBACK_DATA
      v = mrd.AcquisitionFlags(134217728);
    end
    function v = IS_SURFACECOILCORRECTIONSCAN_DATA
      v = mrd.AcquisitionFlags(268435456);
    end
    function v = IS_PHASE_STABILIZATION_REFERENCE
      v = mrd.AcquisitionFlags(536870912);
    end
    function v = IS_PHASE_STABILIZATION
      v = mrd.AcquisitionFlags(1073741824);
    end

    function z = zeros(varargin)
      elem = mrd.AcquisitionFlags(0);
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end

  methods
    function self = AcquisitionFlags(varargin)
      if nargin == 0
        value = 0;
      elseif nargin == 1
        value = varargin{1};
      else
        value = 0;
        for i = 1:nargin
          value = bitor(value, varargin{i});
        end
      end
      self@uint64(value);
    end

    function res = has_flags(self, flag)
      res = bitand(self, flag) == flag;
    end

    function res = with_flags(self, flag)
      res = mrd.AcquisitionFlags(bitor(self, flag));
    end

    function res = without_flags(self, flag)
      res = mrd.AcquisitionFlags(bitand(self, bitcmp(flag)));
    end
  end
end
