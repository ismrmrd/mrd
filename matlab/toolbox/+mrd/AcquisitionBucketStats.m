% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef AcquisitionBucketStats < handle
  properties
    kspace_encode_step_1
    kspace_encode_step_2
    average
    slice
    contrast
    phase
    repetition
    set
    segment
    % TODO: Remove after Yardl #171 is merged
    unused
  end

  methods
    function self = AcquisitionBucketStats(kwargs)
      arguments
        kwargs.kspace_encode_step_1 = mrd.MinMaxStat();
        kwargs.kspace_encode_step_2 = mrd.MinMaxStat();
        kwargs.average = mrd.MinMaxStat();
        kwargs.slice = mrd.MinMaxStat();
        kwargs.contrast = mrd.MinMaxStat();
        kwargs.phase = mrd.MinMaxStat();
        kwargs.repetition = mrd.MinMaxStat();
        kwargs.set = mrd.MinMaxStat();
        kwargs.segment = mrd.MinMaxStat();
        kwargs.unused = "";
      end
      self.kspace_encode_step_1 = kwargs.kspace_encode_step_1;
      self.kspace_encode_step_2 = kwargs.kspace_encode_step_2;
      self.average = kwargs.average;
      self.slice = kwargs.slice;
      self.contrast = kwargs.contrast;
      self.phase = kwargs.phase;
      self.repetition = kwargs.repetition;
      self.set = kwargs.set;
      self.segment = kwargs.segment;
      self.unused = kwargs.unused;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "mrd.AcquisitionBucketStats") && ...
        isequal(self.kspace_encode_step_1, other.kspace_encode_step_1) && ...
        isequal(self.kspace_encode_step_2, other.kspace_encode_step_2) && ...
        isequal(self.average, other.average) && ...
        isequal(self.slice, other.slice) && ...
        isequal(self.contrast, other.contrast) && ...
        isequal(self.phase, other.phase) && ...
        isequal(self.repetition, other.repetition) && ...
        isequal(self.set, other.set) && ...
        isequal(self.segment, other.segment) && ...
        isequal(self.unused, other.unused);
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = mrd.AcquisitionBucketStats();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
