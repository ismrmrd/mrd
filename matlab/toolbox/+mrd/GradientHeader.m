% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef GradientHeader < handle
  properties
    % Clock time stamp (e.g. nanoseconds since midnight)
    gradient_time_stamp_ns
    % Gradient sample duration in nanoseconds
    gradient_sample_time_ns
    % Grad calibration (T/m/A). Can be here or as a calGradMap calibration image or neither
    pulse_calibration
    % Gradient direction as enum
    gradient_direction
  end

  methods
    function self = GradientHeader(kwargs)
      arguments
        kwargs.gradient_time_stamp_ns = uint64(0);
        kwargs.gradient_sample_time_ns = uint32(0);
        kwargs.pulse_calibration = yardl.None;
        kwargs.gradient_direction;
      end
      self.gradient_time_stamp_ns = kwargs.gradient_time_stamp_ns;
      self.gradient_sample_time_ns = kwargs.gradient_sample_time_ns;
      self.pulse_calibration = kwargs.pulse_calibration;
      if ~isfield(kwargs, "gradient_direction")
        throw(yardl.TypeError("Missing required keyword argument 'gradient_direction'"))
      end
      self.gradient_direction = kwargs.gradient_direction;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "mrd.GradientHeader") && ...
        isequal(self.gradient_time_stamp_ns, other.gradient_time_stamp_ns) && ...
        isequal(self.gradient_sample_time_ns, other.gradient_sample_time_ns) && ...
        isequal(self.pulse_calibration, other.pulse_calibration) && ...
        isequal(self.gradient_direction, other.gradient_direction);
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end
  end

end
