% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef ParallelImagingType < handle
  properties
    acceleration_factor
    calibration_mode
    interleaving_dimension
    multiband
  end

  methods
    function self = ParallelImagingType(kwargs)
      arguments
        kwargs.acceleration_factor = mrd.AccelerationFactorType();
        kwargs.calibration_mode = yardl.None;
        kwargs.interleaving_dimension = yardl.None;
        kwargs.multiband = yardl.None;
      end
      self.acceleration_factor = kwargs.acceleration_factor;
      self.calibration_mode = kwargs.calibration_mode;
      self.interleaving_dimension = kwargs.interleaving_dimension;
      self.multiband = kwargs.multiband;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "mrd.ParallelImagingType") && ...
        isequal(self.acceleration_factor, other.acceleration_factor) && ...
        isequal(self.calibration_mode, other.calibration_mode) && ...
        isequal(self.interleaving_dimension, other.interleaving_dimension) && ...
        isequal(self.multiband, other.multiband);
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = mrd.ParallelImagingType();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
