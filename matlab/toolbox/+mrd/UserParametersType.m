% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef UserParametersType < handle
  properties
    user_parameter_long
    user_parameter_double
    user_parameter_string
    user_parameter_base64
  end

  methods
    function self = UserParametersType(kwargs)
      arguments
        kwargs.user_parameter_long = mrd.UserParameterLongType.empty();
        kwargs.user_parameter_double = mrd.UserParameterDoubleType.empty();
        kwargs.user_parameter_string = mrd.UserParameterStringType.empty();
        kwargs.user_parameter_base64 = mrd.UserParameterBase64Type.empty();
      end
      self.user_parameter_long = kwargs.user_parameter_long;
      self.user_parameter_double = kwargs.user_parameter_double;
      self.user_parameter_string = kwargs.user_parameter_string;
      self.user_parameter_base64 = kwargs.user_parameter_base64;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "mrd.UserParametersType") && ...
        isequal(self.user_parameter_long, other.user_parameter_long) && ...
        isequal(self.user_parameter_double, other.user_parameter_double) && ...
        isequal(self.user_parameter_string, other.user_parameter_string) && ...
        isequal(self.user_parameter_base64, other.user_parameter_base64);
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = mrd.UserParametersType();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
