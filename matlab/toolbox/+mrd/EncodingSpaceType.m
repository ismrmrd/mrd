% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef EncodingSpaceType < handle
  properties
    matrix_size
    field_of_view_mm
  end

  methods
    function self = EncodingSpaceType(kwargs)
      arguments
        kwargs.matrix_size = mrd.MatrixSizeType();
        kwargs.field_of_view_mm = mrd.FieldOfViewMm();
      end
      self.matrix_size = kwargs.matrix_size;
      self.field_of_view_mm = kwargs.field_of_view_mm;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "mrd.EncodingSpaceType") && ...
        isequal(self.matrix_size, other.matrix_size) && ...
        isequal(self.field_of_view_mm, other.field_of_view_mm);
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = mrd.EncodingSpaceType();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
