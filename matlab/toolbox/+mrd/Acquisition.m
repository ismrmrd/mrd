% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef Acquisition < handle
  properties
    % Acquisition header
    head
    % Raw k-space samples array
    data
    % Trajectory array
    trajectory
  end

  methods
    function self = Acquisition(kwargs)
      arguments
        kwargs.head = mrd.AcquisitionHeader();
        kwargs.data = single.empty(0, 0);
        kwargs.trajectory = single.empty(0, 0);
      end
      self.head = kwargs.head;
      self.data = kwargs.data;
      self.trajectory = kwargs.trajectory;
    end

    function res = coils(self)
      res = size(self.data, ndims(self.data)-(0));
      return
    end

    function res = samples(self)
      res = size(self.data, ndims(self.data)-(1));
      return
    end

    function res = active_channels(self)
      res = length(self.head.channel_order);
      return
    end

    function res = trajectory_dimensions(self)
      res = size(self.trajectory, ndims(self.trajectory)-(0));
      return
    end

    function res = trajectory_samples(self)
      res = size(self.trajectory, ndims(self.trajectory)-(1));
      return
    end


    function res = eq(self, other)
      res = ...
        isa(other, "mrd.Acquisition") && ...
        isequal(self.head, other.head) && ...
        isequal(self.data, other.data) && ...
        isequal(self.trajectory, other.trajectory);
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = mrd.Acquisition();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
