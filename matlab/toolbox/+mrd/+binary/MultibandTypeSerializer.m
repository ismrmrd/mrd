% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef MultibandTypeSerializer < yardl.binary.RecordSerializer
  methods
    function self = MultibandTypeSerializer()
      field_serializers{1} = yardl.binary.VectorSerializer(mrd.binary.MultibandSpacingTypeSerializer());
      field_serializers{2} = yardl.binary.Float32Serializer;
      field_serializers{3} = yardl.binary.Uint32Serializer;
      field_serializers{4} = yardl.binary.EnumSerializer('mrd.Calibration', @mrd.Calibration, yardl.binary.Int32Serializer);
      field_serializers{5} = yardl.binary.Uint64Serializer;
      self@yardl.binary.RecordSerializer('mrd.MultibandType', field_serializers);
    end

    function write(self, outstream, value)
      arguments
        self
        outstream (1,1) yardl.binary.CodedOutputStream
        value (1,1) mrd.MultibandType
      end
      self.write_(outstream, value.spacing, value.delta_kz, value.multiband_factor, value.calibration, value.calibration_encoding);
    end

    function value = read(self, instream)
      fields = self.read_(instream);
      value = mrd.MultibandType(spacing=fields{1}, delta_kz=fields{2}, multiband_factor=fields{3}, calibration=fields{4}, calibration_encoding=fields{5});
    end
  end
end
