% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef MeasurementInformationTypeSerializer < yardl.binary.RecordSerializer
  methods
    function self = MeasurementInformationTypeSerializer()
      field_serializers{1} = yardl.binary.OptionalSerializer(yardl.binary.StringSerializer);
      field_serializers{2} = yardl.binary.OptionalSerializer(yardl.binary.DateSerializer);
      field_serializers{3} = yardl.binary.OptionalSerializer(yardl.binary.TimeSerializer);
      field_serializers{4} = yardl.binary.EnumSerializer('mrd.PatientPosition', @mrd.PatientPosition, yardl.binary.Int32Serializer);
      field_serializers{5} = yardl.binary.OptionalSerializer(mrd.binary.ThreeDimensionalFloatSerializer());
      field_serializers{6} = yardl.binary.OptionalSerializer(yardl.binary.Int64Serializer);
      field_serializers{7} = yardl.binary.OptionalSerializer(yardl.binary.StringSerializer);
      field_serializers{8} = yardl.binary.OptionalSerializer(yardl.binary.StringSerializer);
      field_serializers{9} = yardl.binary.OptionalSerializer(yardl.binary.StringSerializer);
      field_serializers{10} = yardl.binary.VectorSerializer(mrd.binary.MeasurementDependencyTypeSerializer());
      field_serializers{11} = yardl.binary.OptionalSerializer(yardl.binary.StringSerializer);
      field_serializers{12} = yardl.binary.OptionalSerializer(yardl.binary.StringSerializer);
      field_serializers{13} = yardl.binary.OptionalSerializer(mrd.binary.ReferencedImageSequenceTypeSerializer());
      self@yardl.binary.RecordSerializer('mrd.MeasurementInformationType', field_serializers);
    end

    function write(self, outstream, value)
      arguments
        self
        outstream (1,1) yardl.binary.CodedOutputStream
        value (1,1) mrd.MeasurementInformationType
      end
      self.write_(outstream, value.measurement_id, value.series_date, value.series_time, value.patient_position, value.relative_table_position, value.initial_series_number, value.protocol_name, value.sequence_name, value.series_description, value.measurement_dependency, value.series_instance_uid_root, value.frame_of_reference_uid, value.referenced_image_sequence);
    end

    function value = read(self, instream)
      fields = self.read_(instream);
      value = mrd.MeasurementInformationType(measurement_id=fields{1}, series_date=fields{2}, series_time=fields{3}, patient_position=fields{4}, relative_table_position=fields{5}, initial_series_number=fields{6}, protocol_name=fields{7}, sequence_name=fields{8}, series_description=fields{9}, measurement_dependency=fields{10}, series_instance_uid_root=fields{11}, frame_of_reference_uid=fields{12}, referenced_image_sequence=fields{13});
    end
  end
end
