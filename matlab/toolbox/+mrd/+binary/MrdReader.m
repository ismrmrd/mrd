% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef MrdReader < yardl.binary.BinaryProtocolReader & mrd.MrdReaderBase
  % Binary reader for the Mrd protocol
  properties (Access=protected)
    header_serializer
    data_serializer
  end

  methods
    function self = MrdReader(filename)
      self@mrd.MrdReaderBase();
      self@yardl.binary.BinaryProtocolReader(filename, mrd.MrdReaderBase.schema);
      self.header_serializer = yardl.binary.OptionalSerializer(mrd.binary.HeaderSerializer());
      self.data_serializer = yardl.binary.StreamSerializer(yardl.binary.UnionSerializer('mrd.StreamItem', {mrd.binary.AcquisitionSerializer(), mrd.binary.WaveformSerializer(yardl.binary.Uint32Serializer), mrd.binary.ImageSerializer(yardl.binary.Uint16Serializer), mrd.binary.ImageSerializer(yardl.binary.Int16Serializer), mrd.binary.ImageSerializer(yardl.binary.Uint32Serializer), mrd.binary.ImageSerializer(yardl.binary.Int32Serializer), mrd.binary.ImageSerializer(yardl.binary.Float32Serializer), mrd.binary.ImageSerializer(yardl.binary.Float64Serializer), mrd.binary.ImageSerializer(yardl.binary.Complexfloat32Serializer), mrd.binary.ImageSerializer(yardl.binary.Complexfloat64Serializer)}, {@mrd.StreamItem.Acquisition, @mrd.StreamItem.WaveformUint32, @mrd.StreamItem.ImageUint16, @mrd.StreamItem.ImageInt16, @mrd.StreamItem.ImageUint, @mrd.StreamItem.ImageInt, @mrd.StreamItem.ImageFloat, @mrd.StreamItem.ImageDouble, @mrd.StreamItem.ImageComplexFloat, @mrd.StreamItem.ImageComplexDouble}));
    end
  end

  methods (Access=protected)
    function value = read_header_(self)
      value = self.header_serializer.read(self.stream_);
    end

    function more = has_data_(self)
      more = self.data_serializer.hasnext(self.stream_);
    end

    function value = read_data_(self)
      value = self.data_serializer.read(self.stream_);
    end
  end
end
