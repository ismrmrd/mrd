% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef ExperimentalConditionsType < handle
  properties
    h1resonance_frequency_hz
  end

  methods
    function self = ExperimentalConditionsType(kwargs)
      arguments
        kwargs.h1resonance_frequency_hz = int64(0);
      end
      self.h1resonance_frequency_hz = kwargs.h1resonance_frequency_hz;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "mrd.ExperimentalConditionsType") && ...
        isequal(self.h1resonance_frequency_hz, other.h1resonance_frequency_hz);
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = mrd.ExperimentalConditionsType();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
