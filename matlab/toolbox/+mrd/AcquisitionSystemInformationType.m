% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef AcquisitionSystemInformationType < handle
  properties
    system_vendor
    system_model
    system_field_strength_t
    relative_receiver_noise_bandwidth
    receiver_channels
    coil_label
    institution_name
    station_name
    device_id
    device_serial_number
  end

  methods
    function self = AcquisitionSystemInformationType(kwargs)
      arguments
        kwargs.system_vendor = yardl.None;
        kwargs.system_model = yardl.None;
        kwargs.system_field_strength_t = yardl.None;
        kwargs.relative_receiver_noise_bandwidth = yardl.None;
        kwargs.receiver_channels = yardl.None;
        kwargs.coil_label = mrd.CoilLabelType.empty();
        kwargs.institution_name = yardl.None;
        kwargs.station_name = yardl.None;
        kwargs.device_id = yardl.None;
        kwargs.device_serial_number = yardl.None;
      end
      self.system_vendor = kwargs.system_vendor;
      self.system_model = kwargs.system_model;
      self.system_field_strength_t = kwargs.system_field_strength_t;
      self.relative_receiver_noise_bandwidth = kwargs.relative_receiver_noise_bandwidth;
      self.receiver_channels = kwargs.receiver_channels;
      self.coil_label = kwargs.coil_label;
      self.institution_name = kwargs.institution_name;
      self.station_name = kwargs.station_name;
      self.device_id = kwargs.device_id;
      self.device_serial_number = kwargs.device_serial_number;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "mrd.AcquisitionSystemInformationType") && ...
        isequal({self.system_vendor}, {other.system_vendor}) && ...
        isequal({self.system_model}, {other.system_model}) && ...
        isequal({self.system_field_strength_t}, {other.system_field_strength_t}) && ...
        isequal({self.relative_receiver_noise_bandwidth}, {other.relative_receiver_noise_bandwidth}) && ...
        isequal({self.receiver_channels}, {other.receiver_channels}) && ...
        isequal({self.coil_label}, {other.coil_label}) && ...
        isequal({self.institution_name}, {other.institution_name}) && ...
        isequal({self.station_name}, {other.station_name}) && ...
        isequal({self.device_id}, {other.device_id}) && ...
        isequal({self.device_serial_number}, {other.device_serial_number});
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end

    function res = isequal(self, other)
      res = all(eq(self, other));
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = mrd.AcquisitionSystemInformationType();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
